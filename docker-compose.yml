services:

  db:
    image: postgres:17.0
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    volumes:
      - ./database/initdb:/docker-entrypoint-initdb.d
      - ./database/data:/var/lib/postgresql/data
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8090:8080

  backend:
    image: node:20.18-slim
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    restart: always
    working_dir: /app
    volumes:
      - ./backend:/app/backend:cached
      - ./shared:/app/shared:cached
    command:
      - sh
      - -c
      - |
        apt-get update -y && apt-get install -y openssl
        cd backend
        npm i
        npm run start:shared
        npm run start:dev
    ports:
      - 3000:3000

  frontend:
    image: node:20.18-slim
    working_dir: /app
    volumes:
      - ./frontend:/app/frontend:cached
      - ./shared:/app/shared:cached
    command:
      - sh
      - -c
      - |
        cd frontend
        npm i
        npm run build
        npm run dev
    stdin_open: true # docker run -i #
    tty: true        # docker run -t
    restart: always
    ports:
      - 5000:5000

  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
      - 3003:3003
    restart: always
    volumes:
      - ./nginx/:/etc/nginx/:ro
#     - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro

#  certbot:
#   image: certbot/certbot:latest
#   volumes:
#     - ./certbot/www/:/var/www/certbot/:rw
#     - ./certbot/conf/:/etc/letsencrypt/:rw
